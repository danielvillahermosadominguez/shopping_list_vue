# COMMON CONFIGURATIONS
# ---------------------------------------------------------------------------------------------------------
# 1) Acceptance tests with graphql with fixture in memory. You are testing the graphql queries and mutations
#         - VUE_APP_SERVICE_BACKEND=http://localhost:4000/graphql
#         - FIXTURE_BACKEND_SCRIPT='fixtureServiceMemoryStorage.mjs'
#         - VUE_APP_SERVICE=REAL
#         - BACKEND_TIME_OUT=8000  
#         - BACKEND_TIME_OUT_INCREMENT=500 
# 2) Acceptance tests without graphql. You are not testing the graphql queries and mutations
#         - VUE_APP_SERVICE=MEMORY
# 3) Web app without to connect to service. Persistence in client in memory
#         - VUE_APP_SERVICE=MEMORY
# 4) Web app with connection to service. Persistence in server 
#         - VUE_APP_SERVICE=REAL
# ---------------------------------------------------------------------------------------------------------

# BACKEND URL
VUE_APP_SERVICE_BACKEND=http://localhost:4000/graphql 
#---------------ACCEPTANCE_TESTS------------------------- 
#Time out to wait for the backend response.
BACKEND_TIME_OUT=8000              
#Period of time to retry again
BACKEND_TIME_OUT_INCREMENT=500     
#---------------FIXTURE_BACKEND_SCRIPT VALUES-------------------------
#little server with storage in memory. You can test the graphql and Apollo Client. Faster
FIXTURE_BACKEND_SCRIPT='fixtureServiceMemoryStorage.mjs'
#(Not implemented yet) little server with storage in a SQLite DB in local. slower
#FIXTURE_BACKEND_SCRIPT='fixtureServiceSQLLiteStorage.mjs' 
#No fixture is loaded. You should have a real backend configurated in the VUE_APP_SERVICE_BACKEND before to run the acceptance tests.  Remove the variable has the same behaviour-
#FIXTURE_BACKEND_SCRIPT=NONE 

#---------------APP_SERVICE VALUES------------------------
# Real App Service. You need to have loaded a fixture in the backend or the real backend. Remove the variable has the same behaviour-
#VUE_APP_SERVICE=REAL    
# Fake App Service. You won't use the graphql and you will save the data in memory
#VUE_APP_SERVICE=MEMORY  
# Fake App Service. You won't use the graphql and you will save the data in the storage of vue
#VUE_APP_SERVICE=STORAGE 
VUE_APP_SERVICE=REAL
VUE_APP_I18N_LOCALE=en
VUE_APP_I18N_FALLBACK_LOCALE=en
